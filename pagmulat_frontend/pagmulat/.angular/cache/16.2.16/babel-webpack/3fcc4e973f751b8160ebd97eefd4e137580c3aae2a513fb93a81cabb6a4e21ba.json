{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ApiService = /*#__PURE__*/(() => {\n  class ApiService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:8000/api';\n    }\n    /**\n     * Fetches ARM metadata (top rules, stats, etc.)\n     */\n    getArmMetadata() {\n      return this.http.get(`${this.apiUrl}/arm/metadata`);\n    }\n    /**\n     * Fetches ARM dashboard metrics (limited rules, fast)\n     */\n    getArmDashboard() {\n      return this.http.get(`${this.apiUrl}/arm/dashboard/`);\n    }\n    /**\n     * Fetches all association rules\n     */\n    getAssociationRules() {\n      return this.http.get(`${this.apiUrl}/arm/rules`);\n    }\n    // getDashboard removed: ARM backend does not provide this endpoint anymore\n    getBehaviorPatterns(behavior) {\n      return this.http.get(`${this.apiUrl}/patterns/${behavior}/`);\n    }\n    predictProductivity(features) {\n      return this.http.post(`${this.apiUrl}/predict/`, features);\n    }\n    trainModel() {\n      return this.http.post(`${this.apiUrl}/train/`, {});\n    }\n    getAllRules() {\n      return this.http.get(`${this.apiUrl}/arm-rules/`);\n    }\n    getAllItemsets() {\n      return this.http.get(`${this.apiUrl}/frequent-itemsets/`);\n    }\n    getAllStudents() {\n      return this.http.get(`${this.apiUrl}/all_students/`);\n    }\n    getPredictionHistory() {\n      return this.http.get(`${this.apiUrl}/prediction-history/`);\n    }\n    static {\n      this.ɵfac = function ApiService_Factory(t) {\n        return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ApiService,\n        factory: ApiService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}